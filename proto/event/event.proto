syntax = "proto3";

package event_proto;

option go_package = "./event_proto";

import "google/protobuf/timestamp.proto";

service EventService {
  rpc GetEvents(GetEventsRequest) returns (GetEventsResponse) {};
  rpc GetEvent(GetEventRequest) returns (GetEventResponse) {};
  rpc CreateEvent(CreateEventRequest) returns (CreateEventResponse) {};
  rpc DeleteEvent(DeleteEventRequest) returns (DeleteEventResponse) {}
  rpc UpdateEvent(UpdateEventRequest) returns (UpdateEventResponse) {}
  rpc UpdateEventStatus(UpdateEventStatusRequest) returns (UpdateEventStatusResponse) {}
}

enum EventStatus {
  N = 0; // Not Found
  P = 1; // Preparing
  L = 2; // Launched
  C = 3; // Closed
}

message Event {
  int64 event_id = 1;
  int64 ticket_count = 2;
  int64 limit_per_person = 3;
  EventStatus event_status = 4;
  google.protobuf.Timestamp launch_time = 5;
  google.protobuf.Timestamp due_time = 6;
}

message GetEventsRequest {
  int64 since = 1;
  int64 until = 2;
  int64 offset = 3;
}

message GetEventsResponse {
  repeated Event events = 1;
  string paging_next = 2;
}

message GetEventRequest {
  int64 event_id = 1;
}

message GetEventResponse {
  Event event = 1;
}

message CreateEventRequest {
  int64 ticket_count = 1;
  int64 limit_per_person = 2;
  EventStatus event_status = 3;
  google.protobuf.Timestamp launch_time = 4;
  google.protobuf.Timestamp due_time = 5;
}

message CreateEventResponse {}

message DeleteEventRequest {
  int64 event_id = 1;
}

message DeleteEventResponse {}

message UpdateEventRequest {
  int64 event_id = 1;
  int64 ticket_count = 2;
  int64 limit_per_person = 3;
  EventStatus event_status = 4;
  google.protobuf.Timestamp launch_time = 5;
  google.protobuf.Timestamp due_time = 6;
}

message UpdateEventResponse {}

message UpdateEventStatusRequest {
  int64 event_id = 1;
  EventStatus event_status = 2;
}

message UpdateEventStatusResponse {}